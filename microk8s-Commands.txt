mahsan@microk8s:~/microk8s$ sudo microk8s status
microk8s is running
high-availability: no
  datastore master nodes: 127.0.0.1:19001
  datastore standby nodes: none
addons:
  enabled:
    dashboard            # The Kubernetes dashboard
    ha-cluster           # Configure high availability on the current node
    metrics-server       # K8s Metrics Server for API access to service metrics
  disabled:
    ambassador           # Ambassador API Gateway and Ingress
    cilium               # SDN, fast with full network policy
    dashboard-ingress    # Ingress definition for Kubernetes dashboard
    dns                  # CoreDNS
    fluentd              # Elasticsearch-Fluentd-Kibana logging and monitoring
    gpu                  # Automatic enablement of Nvidia CUDA
    helm                 # Helm 2 - the package manager for Kubernetes
    helm3                # Helm 3 - Kubernetes package manager
    host-access          # Allow Pods connecting to Host services smoothly
    inaccel              # Simplifying FPGA management in Kubernetes
    ingress              # Ingress controller for external access
    istio                # Core Istio service mesh services
    jaeger               # Kubernetes Jaeger operator with its simple config
    kata                 # Kata Containers is a secure runtime with lightweight VMS
    keda                 # Kubernetes-based Event Driven Autoscaling
    knative              # The Knative framework on Kubernetes.
    kubeflow             # Kubeflow for easy ML deployments
    linkerd              # Linkerd is a service mesh for Kubernetes and other frameworks
    metallb              # Loadbalancer for your Kubernetes cluster
    multus               # Multus CNI enables attaching multiple network interfaces to pods
    openebs              # OpenEBS is the open-source storage solution for Kubernetes
    openfaas             # OpenFaaS serverless framework
    portainer            # Portainer UI for your Kubernetes cluster
    prometheus           # Prometheus operator for monitoring and logging
    rbac                 # Role-Based Access Control for authorisation
    registry             # Private image registry exposed on localhost:32000
    storage              # Storage class; allocates storage from host directory
    traefik              # traefik Ingress controller for external access
mahsan@microk8s:~/microk8s$



***
mahsan@microk8s:~/microk8s$  microk8s config
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lVWktlREdVY0NWTmY2U3k5UHRCbFZvZ21hcVpBd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0Z6RVZNQk1HQTFVRUF3d01NVEF1TVRVeUxqRTRNeTR4TUI0WERUSXlNREl3TnpBMk5UZzFOMW9YRFRNeQpNREl3TlRBMk5UZzFOMW93RnpFVk1CTUdBMVVFQXd3TU1UQXVNVFV5TGpFNE15NHhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzVEtoeC9zOHZTTmNxcnFXREZUeWF0TkwrWlNPNWFtYkpMRjEKZEJKZFhsM0FDL0diUE9JSHZIenBVMHlnd2JHL0JGZDdQanRsZWpJbThCSCtRQUYvV3R2L1JTQUNJQW1WZG82SQpzMVhQQlJnYjkxeTNuNThGRkZlbWZ4SnRMU2FSczhaMVdFUFhIR2tKTitCN0t0MW1kdXlMT25odXRNQzdGWDZTCmNnSE1sOWE3aVZwY2VvQWhaT0xWTXFpNUpnR2o4Mi9ERnc3UUVZVVZCejVGaHlDK1o2ZWNmb2Ftd2VxQXFRZW0KN0ZtdWFYVm5mQTZpVndSeGp3WWc2N2lsbDkzRERDRGJPYy8ydkprZUNkRER6QkR5S3lNSEFyKzFBMXh2SUpxeQo2SkkrNGhySTU2SDR4YXh3U2dsdk5ZUmp3QWZkSVlSM3ZNWnJBU216a2RhUFRVaktGUUlEQVFBQm8xTXdVVEFkCkJnTlZIUTRFRmdRVVJEWm40N1lScVFDZ1NjenpSamFrSVluV2JUTXdId1lEVlIwakJCZ3dGb0FVUkRabjQ3WVIKcVFDZ1NjenpSamFrSVluV2JUTXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBcU11R2owYldCaFlLMUFXVHlVYStwaXgvSnhhMzZ0N2NqOFZ6MnYzYldUQWwzUDdLNHprZXpGWEEra0haCmo3Q2wweFBmdmhaN0d5NHlOU2E1QzVkUDJkeDgzNjN0clltWWowdjF6Tit3blY3ZkNwQ25hSWJ3a1pZaWZNV0EKNWYvSzF2eXNsQ0sxYkJ4SVRvZkV1c2NrK3BpbmR3UzByd2I2Tm5IQlRXL0pOdURSTXJpdE9OVmh5OFJDYzlzdgpMeXVrMWlwRTB5bCtWbGdEZldPcUZjc1RHR1BtMmVkZ2kwRVM2bkNsVlRqUkRjSEFLRnRsYkJOaWE1UCtHMXRrCkkreTRMa0h6VWNueXRBZlZLTUI4ZDdsYXdicUVSd1JwNDNJZlk0endXckZVN2pMOGhaSjVKeEppbTRkUFBXbXQKSE1iK09LVTY2M0Z3cVZ0aDZyZWJjTFBSR2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    server: https://192.168.0.74:16443
  name: microk8s-cluster
contexts:
- context:
    cluster: microk8s-cluster
    user: admin
  name: microk8s
current-context: microk8s
kind: Config
preferences: {}
users:
- name: admin
  user:
    token: ZUFHYmIzMkpoQlphWDZyV1VUaEFGQVBYSEdoVnAxZ1pEbVlzVVpIT0tzWT0K

mahsan@microk8s:~/microk8s$

***
mahsan@microk8s:~/microk8s$ microk8s kubectl get all
NAME                 TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.152.183.1   <none>        443/TCP   22h
mahsan@microk8s:~/microk8s$

***
mahsan@microk8s:~/microk8s$ microk8s kubectl get nodes
NAME       STATUS   ROLES    AGE   VERSION
microk8s   Ready    <none>   22h   v1.23.3-2+d441060727c463
mahsan@microk8s:~/microk8s$

***


